openapi: 3.0.3
info:
  title: "TermoWeb Cloud (capture\u2011verified)"
  version: '2025-08-13'
  description: |
    REST endpoints observed from the official Android app on 2025‑08‑13.
    Tevolve ships three Android apps (TermoWeb, Ducaheat, Tevolve) that share this API surface but use separate OAuth clients and base URLs.
    Implemented backends:
      • TermoWeb → https://control.termoweb.net (client_id 52172dc84f63d6c759000005, secret bxv4Z3xUSe)
      • Ducaheat → https://api-tevolve.termoweb.net (client_id 5c49dce977510351506c42db, secret tevolve)
    TODO: Document the Tevolve-branded backend once captured.
servers:
- url: https://control.termoweb.net
  description: TermoWeb production backend (client_id 52172dc84f63d6c759000005)
- url: https://api-tevolve.termoweb.net
  description: Ducaheat backend (client_id 5c49dce977510351506c42db)
# TODO: Add Tevolve backend server entry once implementation is captured.
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 604800
        scope:
          type: string
      required:
      - access_token
      - token_type
      - expires_in
    Device:
      type: object
      properties:
        dev_id:
          type: string
        name:
          type: string
        fw_version:
          type: string
        serial_id:
          type: string
    NodesResponse:
      type: object
      properties:
        nodes:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: htr
              addr:
                type: integer
              name:
                type: string
              installed:
                type: boolean
              lost:
                type: boolean
              hw_version:
                type: string
              fw_version:
                type: string
            additionalProperties: true
    HeaterSettings:
      type: object
      properties:
        name:
          type: string
        priority:
          type: integer
        prog:
          type: array
          items:
            type: integer
            enum:
            - 0
            - 1
            - 2
          minItems: 168
          maxItems: 168
          description: "168 hourly entries (Mon 00\u2192Sun 23). 0=cold, 1=night,\
            \ 2=day."
        units:
          type: string
          enum:
          - C
          - F
        ptemp:
          type: array
          items:
            type: string
          minItems: 3
          maxItems: 3
          description: '[cold, night, day] temperatures as strings with one decimal.'
        mtemp:
          type: string
          description: Ambient temperature
        stemp:
          type: string
          description: Manual setpoint
        mode:
          type: string
          enum:
          - auto
          - manual
          - 'off'
        max_power:
          type: string
        state:
          type: string
        true_radiant_active:
          type: boolean
        window_state_active:
          type: boolean
        sync_status:
          type: string
      additionalProperties: true
    HeaterSettingsWrite:
      type: object
      properties:
        mode:
          type: string
          enum:
          - auto
          - manual
          - 'off'
        stemp:
          type: string
          description: Setpoint, string with one decimal
        units:
          type: string
          enum:
          - C
          - F
        ptemp:
          type: array
          items:
            type: string
          minItems: 3
          maxItems: 3
        prog:
          type: array
          items:
            type: integer
            enum:
            - 0
            - 1
            - 2
          minItems: 168
          maxItems: 168
      additionalProperties: false
    AdvancedSetup:
      type: object
      properties:
        control_mode:
          type: integer
        units:
          type: string
          enum:
          - C
          - F
        true_radiant_enabled:
          type: boolean
        window_mode_enabled:
          type: boolean
        sync_status:
          type: string
      additionalProperties: true
    SamplesResponse:
      type: object
      properties:
        samples:
          type: array
          items:
            type: object
            properties:
              t:
                type: integer
                description: UNIX seconds
              temp:
                type: string
              counter:
                type: string
                description: Cumulative Wh
            required:
            - t
paths:
  /client/token:
    post:
      summary: Obtain access token (password grant)
      security:
      - basicAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                  - password
                username:
                  type: string
                password:
                  type: string
              required:
              - grant_type
              - username
              - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /api/v2/devs/:
    get:
      summary: List devices
      security:
      - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  devs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  invited_to:
                    type: array
                    items:
                      type: object
  /api/v2/devs/{dev_id}/mgr/nodes:
    get:
      summary: Nodes in the system
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesResponse'
  /api/v2/devs/{dev_id}/mgr/rtc/time:
    get:
      summary: Hub RTC time
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  y:
                    type: integer
                  n:
                    type: integer
                  d:
                    type: integer
                  h:
                    type: integer
                  m:
                    type: integer
                  s:
                    type: integer
                  w:
                    type: integer
  /api/v2/devs/{dev_id}/geo_data:
    get:
      summary: Hub geodata and tz
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /api/v2/devs/{dev_id}/storage:
    get:
      summary: Hub persistent storage blob
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /api/v2/devs/{dev_id}/htr_system/power_limit:
    get:
      summary: System power limit
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  power_limit:
                    type: string
  /api/v2/devs/{dev_id}/htr/{addr}/settings:
    get:
      summary: Read heater settings
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      - name: addr
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaterSettings'
    post:
      summary: Update heater settings (partial)
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      - name: addr
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeaterSettingsWrite'
      responses:
        '201':
          description: Accepted (empty JSON body)
  /api/v2/devs/{dev_id}/htr/{addr}/advanced_setup:
    get:
      summary: Read heater advanced setup
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      - name: addr
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedSetup'
  /api/v2/devs/{dev_id}/{node_type}/{addr}/samples:
    get:
      summary: Historical samples (temperature, energy)
      security:
      - bearerAuth: []
      parameters:
      - name: dev_id
        in: path
        required: true
        schema:
          type: string
      - name: node_type
        in: path
        required: true
        schema:
          type: string
          enum:
          - htr
      - name: addr
        in: path
        required: true
        schema:
          type: integer
      - name: start
        in: query
        required: true
        schema:
          type: integer
      - name: end
        in: query
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamplesResponse'
